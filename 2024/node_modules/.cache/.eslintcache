[{"/Users/charliehwang/Desktop/chanwooh.github.io/2020/src/index.js":"1","/Users/charliehwang/Desktop/chanwooh.github.io/2020/src/components/Layout/Layout.js":"2","/Users/charliehwang/Desktop/chanwooh.github.io/2020/src/components/Puzzle/Puzzle.js":"3","/Users/charliehwang/Desktop/chanwooh.github.io/2020/src/components/ToolBar/ToolBar.js":"4","/Users/charliehwang/Desktop/chanwooh.github.io/2020/src/components/Header/Header.js":"5","/Users/charliehwang/Desktop/chanwooh.github.io/2020/src/components/ClueBar/ClueBar.js":"6","/Users/charliehwang/Desktop/chanwooh.github.io/2020/src/components/Board/Board.js":"7","/Users/charliehwang/Desktop/chanwooh.github.io/2020/src/components/CongratsModal/CongratsModal.js":"8","/Users/charliehwang/Desktop/chanwooh.github.io/2020/src/components/ClueList/ClueList.js":"9","/Users/charliehwang/Desktop/chanwooh.github.io/2020/src/components/Square/Square.js":"10","/Users/charliehwang/Desktop/chanwooh.github.io/2020/src/components/ClueRow/ClueRow.js":"11"},{"size":205,"mtime":1683062071936,"results":"12","hashOfConfig":"13"},{"size":1140,"mtime":1683238494437,"results":"14","hashOfConfig":"13"},{"size":6358,"mtime":1683238563401,"results":"15","hashOfConfig":"13"},{"size":1216,"mtime":1683238429862,"results":"16","hashOfConfig":"13"},{"size":534,"mtime":1683247370342,"results":"17","hashOfConfig":"13"},{"size":340,"mtime":1683238027114,"results":"18","hashOfConfig":"13"},{"size":938,"mtime":1683236213424,"results":"19","hashOfConfig":"13"},{"size":884,"mtime":1683062958329,"results":"20","hashOfConfig":"13"},{"size":775,"mtime":1683062071925,"results":"21","hashOfConfig":"13"},{"size":1450,"mtime":1683235687815,"results":"22","hashOfConfig":"13"},{"size":620,"mtime":1683062071925,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"kl5naj",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/charliehwang/Desktop/chanwooh.github.io/2020/src/index.js",[],[],"/Users/charliehwang/Desktop/chanwooh.github.io/2020/src/components/Layout/Layout.js",[],[],"/Users/charliehwang/Desktop/chanwooh.github.io/2020/src/components/Puzzle/Puzzle.js",["60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78"],[],"import React from 'react';\nimport './Puzzle.css';\n\nimport Board from './../Board/Board';\nimport ClueBar from './../ClueBar/ClueBar';\nimport ClueList from './../ClueList/ClueList';\nimport CongratsModal from './../CongratsModal/CongratsModal';\n\nclass Puzzle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    var crossword = require('./../../data/khai_crossword.json');\n    this.state = {\n      isAcross: false, \n      isComplete: false,\n      isStarted: false,\n      squares: crossword[\"squares\"],\n      currSquareIndex: 0,\n      showModal: false\n    };\n  }\n\n  handleClueRowClick(squareIndex, direction) {\n\n    // Copy for immutability\n    var updatedSquares = this.state.squares.slice();\n    var isAcross = direction == \"across\";\n\n    // Go through squares and update all of their props accordingly\n    for (var index = 0; index < updatedSquares.length; index++) {\n      var square = updatedSquares[index];\n      square.isSelected = index == squareIndex;\n      square.isRelated = this.state.squares[squareIndex][isAcross ? \"across\" : \"down\"][\"relatedSquares\"].includes(index);\n    }\n\n    if (!this.state.isStarted)\n    {\n      this.props.startTimer();\n    }\n\n    this.setState({\n      isAcross: isAcross,\n      isStarted: true,\n      currSquareIndex: squareIndex,\n      squares: updatedSquares\n    });\n  }\n\n  handleClick(squareIndex) {\n\n    var updatedIsAcross = this.state.currSquareIndex == squareIndex ? !this.state.isAcross : this.state.isAcross;\n    if (this.state.squares[squareIndex][updatedIsAcross ? \"across\" : \"down\"][\"puzzleIndex\"] == null) {\n      updatedIsAcross = !updatedIsAcross;\n    } \n    this.handleClueRowClick(squareIndex, updatedIsAcross ? \"across\" : \"direction\");\n  }\n\n  handleKeyboardPress(e, squareIndex) {\n\n    var keyCode = e.keyCode;\n    if (this.state.isComplete){\n\n      return;\n\n    } else if (65 <= keyCode && keyCode <= 90) {\n      /* Typed an alpha letter */\n\n      // Copy for immutability\n      var updatedSquares = this.state.squares.slice();\n      var currSquareIndex = this.state.currSquareIndex;\n      var direction = this.state.isAcross ? \"across\" : \"down\";\n      var relatedSquares = this.state.squares[currSquareIndex][direction][\"relatedSquares\"];\n\n      // Update current square's guess\n      updatedSquares[currSquareIndex][\"guess\"] = String.fromCharCode(keyCode);\n      if (this.props.isPencil) {\n        updatedSquares[currSquareIndex][\"isPencil\"] = true;\n      } else {\n        updatedSquares[currSquareIndex][\"isPencil\"] = false;\n      }\n\n      // Auto change to next square\n      // If the current square is the last element of its related squares, move to the \"nextSquareIndex\" instead\n      if (relatedSquares[relatedSquares.length - 1] == currSquareIndex) {\n        var nextSquareIndex = updatedSquares[currSquareIndex][direction][\"nextClueSquareIndex\"];\n        this.setState({\n          currSquareIndex: nextSquareIndex == -1 ? 0 : currSquareIndex\n        }, () => this.handleClick(nextSquareIndex == -1 ? 0 : nextSquareIndex));\n      } else {\n        this.handleClick(relatedSquares[relatedSquares.indexOf(currSquareIndex) + 1]);\n      }\n\n      this.setState({\n        squares: updatedSquares\n      });\n\n    } else if (keyCode == 13 || keyCode == 9) {\n      /* Typed an \"Enter\" or \"Tab\" */\n\n      var nextSquareIndex = this.state.squares[this.state.currSquareIndex][this.state.isAcross ? \"across\" : \"down\"][\"nextClueSquareIndex\"];\n\n      this.setState({\n        currSquareIndex: nextSquareIndex == -1 ? 0 : this.state.currSquareIndex\n      }, () => this.handleClick(nextSquareIndex == -1 ? 0 : nextSquareIndex));\n\n    } else if (keyCode == 8) {\n      /* Typed a backspace */\n\n      // Copy for immutability\n      var updatedSquares = this.state.squares.slice();\n      var currSquareIndex = this.state.currSquareIndex;\n      var direction = this.state.isAcross ? \"across\" : \"down\";\n      var relatedSquares = this.state.squares[currSquareIndex][direction][\"relatedSquares\"];\n\n      // Update current square's guess if a letter is already there\n      // Else, go to previous square and erase that one\n      if (updatedSquares[currSquareIndex][\"guess\"] != \"\") {\n        updatedSquares[currSquareIndex][\"guess\"] = \"\";\n      } else {\n        // Auto change to previous square\n        // Only operates within current word\n        if (relatedSquares[0] != currSquareIndex) {\n          updatedSquares[relatedSquares[relatedSquares.indexOf(currSquareIndex) - 1]][\"guess\"] = \"\";\n          this.handleClick(relatedSquares[relatedSquares.indexOf(currSquareIndex) - 1]);\n        }\n      }\n\n      this.setState({\n        squares: updatedSquares\n      });\n    }\n\n    if (this.state.squares.every(square => (square.guess == square.answer))) {\n      /* Solved the puzzle */\n\n      // Do something special\n      this.setState({\n        isComplete: true,\n        showModal: true\n      });\n\n      // Stop timer\n      this.props.stopTimer();\n    }\n  }\n\n  hideModal() {\n    this.setState({\n      showModal: false\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"puzzle\">\n        <section className=\"cluebar-board\">\n          <ClueBar direction={this.state.isStarted ? (this.state.isAcross ? \"A\" : \"D\") : \"\"}\n                   puzzleIndex={this.state.isStarted ? this.state.squares[this.state.currSquareIndex][this.state.isAcross ? \"across\" : \"down\"][\"puzzleIndex\"] : \"\"}\n                   hint={this.state.isStarted ? this.state.squares[this.state.currSquareIndex][this.state.isAcross ? \"across\" : \"down\"][\"hint\"]: \"Click on any cell to start!\"} />\n          <Board squares={this.state.squares} onClick={(i) => this.handleClick(i)} onKeyDown={(e, i) => this.handleKeyboardPress(e, i)} />\n        </section>\n        <section className=\"cluelists\">\n          <ClueList direction=\"across\" \n                    currentDirection={this.state.isAcross ? \"across\" : \"down\"} \n                    squares={this.state.squares} \n                    onClick={(i, d) => this.handleClueRowClick(i, d)} />\n          <ClueList direction=\"down\" \n                    currentDirection={this.state.isAcross ? \"across\" : \"down\"} \n                    squares={this.state.squares} \n                    onClick={(i, d) => this.handleClueRowClick(i, d)} />\n        </section>\n        <CongratsModal show={this.state.showModal} hideModal={() => this.hideModal()}/>\n      </div>\n    );\n  }\n}\n\nexport default Puzzle;\n","/Users/charliehwang/Desktop/chanwooh.github.io/2020/src/components/ToolBar/ToolBar.js",[],[],"/Users/charliehwang/Desktop/chanwooh.github.io/2020/src/components/Header/Header.js",[],[],"/Users/charliehwang/Desktop/chanwooh.github.io/2020/src/components/ClueBar/ClueBar.js",[],[],"/Users/charliehwang/Desktop/chanwooh.github.io/2020/src/components/Board/Board.js",[],[],"/Users/charliehwang/Desktop/chanwooh.github.io/2020/src/components/CongratsModal/CongratsModal.js",[],[],"/Users/charliehwang/Desktop/chanwooh.github.io/2020/src/components/ClueList/ClueList.js",["79"],[],"import React from 'react';\nimport './ClueList.css';\n\nimport ClueRow from './../ClueRow/ClueRow';\n\nfunction ClueList(props) {\n\n  \tvar relevantSquares = props.squares.filter(square => (square[props.direction][\"isHead\"]));\n\n    return (\n      <div className=\"cluelist\">\n      \t<h3>{props.direction.toUpperCase()}</h3>\n      \t<ol>\n\t      \t{\n\t      \t\trelevantSquares.map(square => (\n\t\t      \t\t<ClueRow isSelected={props.direction == props.currentDirection && square[\"isRelated\"]} \n                puzzleIndex={square[props.direction][\"puzzleIndex\"]} \n                hint={square[props.direction][\"hint\"]} \n                onClick={() => props.onClick(square[\"squareIndex\"], props.direction)} />\n\t      \t\t))\n\t      \t}\t\n      \t</ol>\n      </div>\n    );\n}\n\nexport default ClueList;\n","/Users/charliehwang/Desktop/chanwooh.github.io/2020/src/components/Square/Square.js",["80","81","82","83"],[],"import React from 'react';\nimport './Square.css';\n\nclass Square extends React.Component {\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.isSelected != this.props.isSelected ||\n      nextProps.isRelated != this.props.isRelated ||\n      nextProps.guess != this.props.guess;\n  }\n\n  render() {\n    if (this.props.type === \"EMPTY\") {\n      var puzzleIndex = this.props.across.isHead ? this.props.across.puzzleIndex : (this.props.down.isHead ? this.props.down.puzzleIndex : \"\");\n      var placeholder = (<div className=\"placeholder\"></div>);\n\n      var squareClassName = \"square empty-square\";\n      squareClassName += this.props.isRelated ? \" related\" : \"\";\n      squareClassName += this.props.isSelected ? \" selected\" : \"\";\n      squareClassName += this.props.isGray ? \" gray\" : \"\";\n\n      var guessClassName = this.props.isPencil ? \"guess pencil\" : \"guess\";\n\n      return(\n          <div className={squareClassName} width=\"33\" height=\"33\" onClick={this.props.onClick} tabIndex=\"0\" onKeyDown={this.props.onKeyDown}>\n            <span className=\"puzzleIndex\">\n              {puzzleIndex == \"\" ? placeholder : puzzleIndex}\n            </span>\n            <span className={guessClassName}>\n              {this.props.guess}\n            </span>\n          </div>\n        );\n    } else {\n      return(\n          <div className=\"square black-square\" width=\"33\" height=\"33\" tabIndex=\"-1\"></div>\n      );\n    }\n  }\n}\n\nexport default Square;\n","/Users/charliehwang/Desktop/chanwooh.github.io/2020/src/components/ClueRow/ClueRow.js",[],[],{"ruleId":"84","severity":1,"message":"85","line":28,"column":30,"nodeType":"86","messageId":"87","endLine":28,"endColumn":32},{"ruleId":"84","severity":1,"message":"85","line":33,"column":33,"nodeType":"86","messageId":"87","endLine":33,"endColumn":35},{"ruleId":"84","severity":1,"message":"85","line":52,"column":54,"nodeType":"86","messageId":"87","endLine":52,"endColumn":56},{"ruleId":"84","severity":1,"message":"85","line":85,"column":53,"nodeType":"86","messageId":"87","endLine":85,"endColumn":55},{"ruleId":"84","severity":1,"message":"85","line":88,"column":44,"nodeType":"86","messageId":"87","endLine":88,"endColumn":46},{"ruleId":"84","severity":1,"message":"85","line":89,"column":51,"nodeType":"86","messageId":"87","endLine":89,"endColumn":53},{"ruleId":"84","severity":1,"message":"85","line":98,"column":24,"nodeType":"86","messageId":"87","endLine":98,"endColumn":26},{"ruleId":"84","severity":1,"message":"85","line":98,"column":41,"nodeType":"86","messageId":"87","endLine":98,"endColumn":43},{"ruleId":"88","severity":1,"message":"89","line":101,"column":11,"nodeType":"90","messageId":"91","endLine":101,"endColumn":26},{"ruleId":"84","severity":1,"message":"85","line":104,"column":42,"nodeType":"86","messageId":"87","endLine":104,"endColumn":44},{"ruleId":"84","severity":1,"message":"85","line":105,"column":49,"nodeType":"86","messageId":"87","endLine":105,"endColumn":51},{"ruleId":"84","severity":1,"message":"85","line":107,"column":24,"nodeType":"86","messageId":"87","endLine":107,"endColumn":26},{"ruleId":"88","severity":1,"message":"92","line":111,"column":11,"nodeType":"90","messageId":"91","endLine":111,"endColumn":25},{"ruleId":"88","severity":1,"message":"93","line":112,"column":11,"nodeType":"90","messageId":"91","endLine":112,"endColumn":26},{"ruleId":"88","severity":1,"message":"94","line":113,"column":11,"nodeType":"90","messageId":"91","endLine":113,"endColumn":20},{"ruleId":"88","severity":1,"message":"95","line":114,"column":11,"nodeType":"90","messageId":"91","endLine":114,"endColumn":25},{"ruleId":"84","severity":1,"message":"96","line":118,"column":52,"nodeType":"86","messageId":"87","endLine":118,"endColumn":54},{"ruleId":"84","severity":1,"message":"96","line":123,"column":31,"nodeType":"86","messageId":"87","endLine":123,"endColumn":33},{"ruleId":"84","severity":1,"message":"85","line":134,"column":58,"nodeType":"86","messageId":"87","endLine":134,"endColumn":60},{"ruleId":"84","severity":1,"message":"85","line":16,"column":48,"nodeType":"86","messageId":"87","endLine":16,"endColumn":50},{"ruleId":"84","severity":1,"message":"96","line":7,"column":33,"nodeType":"86","messageId":"87","endLine":7,"endColumn":35},{"ruleId":"84","severity":1,"message":"96","line":8,"column":27,"nodeType":"86","messageId":"87","endLine":8,"endColumn":29},{"ruleId":"84","severity":1,"message":"96","line":9,"column":23,"nodeType":"86","messageId":"87","endLine":9,"endColumn":25},{"ruleId":"84","severity":1,"message":"85","line":27,"column":28,"nodeType":"86","messageId":"87","endLine":27,"endColumn":30},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'nextSquareIndex' is already defined.","Identifier","redeclared","'updatedSquares' is already defined.","'currSquareIndex' is already defined.","'direction' is already defined.","'relatedSquares' is already defined.","Expected '!==' and instead saw '!='."]