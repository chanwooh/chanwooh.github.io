{"ast":null,"code":"import _classCallCheck from\"/Users/charliehwang/Desktop/chanwooh.github.io/2020/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/charliehwang/Desktop/chanwooh.github.io/2020/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/Users/charliehwang/Desktop/chanwooh.github.io/2020/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/charliehwang/Desktop/chanwooh.github.io/2020/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React from'react';import'./Puzzle.css';import Board from'./../Board/Board';import ClueBar from'./../ClueBar/ClueBar';import ClueList from'./../ClueList/ClueList';import CongratsModal from'./../CongratsModal/CongratsModal';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Puzzle=/*#__PURE__*/function(_React$Component){_inherits(Puzzle,_React$Component);var _super=_createSuper(Puzzle);function Puzzle(props){var _this;_classCallCheck(this,Puzzle);_this=_super.call(this,props);var crossword=require('./../../data/khai_crossword.json');_this.state={isAcross:false,isComplete:false,isStarted:false,squares:crossword[\"squares\"],currSquareIndex:0,showModal:false};return _this;}_createClass(Puzzle,[{key:\"handleClueRowClick\",value:function handleClueRowClick(squareIndex,direction){// Copy for immutability\nvar updatedSquares=this.state.squares.slice();var isAcross=direction==\"across\";// Go through squares and update all of their props accordingly\nfor(var index=0;index<updatedSquares.length;index++){var square=updatedSquares[index];square.isSelected=index==squareIndex;square.isRelated=this.state.squares[squareIndex][isAcross?\"across\":\"down\"][\"relatedSquares\"].includes(index);}if(!this.state.isStarted){this.props.startTimer();}this.setState({isAcross:isAcross,isStarted:true,currSquareIndex:squareIndex,squares:updatedSquares});}},{key:\"handleClick\",value:function handleClick(squareIndex){var updatedIsAcross=this.state.currSquareIndex==squareIndex?!this.state.isAcross:this.state.isAcross;if(this.state.squares[squareIndex][updatedIsAcross?\"across\":\"down\"][\"puzzleIndex\"]==null){updatedIsAcross=!updatedIsAcross;}this.handleClueRowClick(squareIndex,updatedIsAcross?\"across\":\"direction\");}},{key:\"handleKeyboardPress\",value:function handleKeyboardPress(e,squareIndex){var _this2=this;var keyCode=e.keyCode;if(this.state.isComplete){return;}else if(65<=keyCode&&keyCode<=90){/* Typed an alpha letter */ // Copy for immutability\nvar updatedSquares=this.state.squares.slice();var currSquareIndex=this.state.currSquareIndex;var direction=this.state.isAcross?\"across\":\"down\";var relatedSquares=this.state.squares[currSquareIndex][direction][\"relatedSquares\"];// Update current square's guess\nupdatedSquares[currSquareIndex][\"guess\"]=String.fromCharCode(keyCode);if(this.props.isPencil){updatedSquares[currSquareIndex][\"isPencil\"]=true;}else{updatedSquares[currSquareIndex][\"isPencil\"]=false;}// Auto change to next square\n// If the current square is the last element of its related squares, move to the \"nextSquareIndex\" instead\nif(relatedSquares[relatedSquares.length-1]==currSquareIndex){var nextSquareIndex=updatedSquares[currSquareIndex][direction][\"nextClueSquareIndex\"];this.setState({currSquareIndex:nextSquareIndex==-1?0:currSquareIndex},function(){return _this2.handleClick(nextSquareIndex==-1?0:nextSquareIndex);});}else{this.handleClick(relatedSquares[relatedSquares.indexOf(currSquareIndex)+1]);}this.setState({squares:updatedSquares});}else if(keyCode==13||keyCode==9){/* Typed an \"Enter\" or \"Tab\" */var nextSquareIndex=this.state.squares[this.state.currSquareIndex][this.state.isAcross?\"across\":\"down\"][\"nextClueSquareIndex\"];this.setState({currSquareIndex:nextSquareIndex==-1?0:this.state.currSquareIndex},function(){return _this2.handleClick(nextSquareIndex==-1?0:nextSquareIndex);});}else if(keyCode==8){/* Typed a backspace */ // Copy for immutability\nvar updatedSquares=this.state.squares.slice();var currSquareIndex=this.state.currSquareIndex;var direction=this.state.isAcross?\"across\":\"down\";var relatedSquares=this.state.squares[currSquareIndex][direction][\"relatedSquares\"];// Update current square's guess if a letter is already there\n// Else, go to previous square and erase that one\nif(updatedSquares[currSquareIndex][\"guess\"]!=\"\"){updatedSquares[currSquareIndex][\"guess\"]=\"\";}else{// Auto change to previous square\n// Only operates within current word\nif(relatedSquares[0]!=currSquareIndex){updatedSquares[relatedSquares[relatedSquares.indexOf(currSquareIndex)-1]][\"guess\"]=\"\";this.handleClick(relatedSquares[relatedSquares.indexOf(currSquareIndex)-1]);}}this.setState({squares:updatedSquares});}if(this.state.squares.every(function(square){return square.guess==square.answer;})){/* Solved the puzzle */ // Do something special\nthis.setState({isComplete:true,showModal:true});// Stop timer\nthis.props.stopTimer();}}},{key:\"hideModal\",value:function hideModal(){this.setState({showModal:false});}},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/_jsxs(\"div\",{className:\"puzzle\",children:[/*#__PURE__*/_jsxs(\"section\",{className:\"cluebar-board\",children:[/*#__PURE__*/_jsx(ClueBar,{direction:this.state.isStarted?this.state.isAcross?\"A\":\"D\":\"\",puzzleIndex:this.state.isStarted?this.state.squares[this.state.currSquareIndex][this.state.isAcross?\"across\":\"down\"][\"puzzleIndex\"]:\"\",hint:this.state.isStarted?this.state.squares[this.state.currSquareIndex][this.state.isAcross?\"across\":\"down\"][\"hint\"]:\"Click on any cell to start!\"}),/*#__PURE__*/_jsx(Board,{squares:this.state.squares,onClick:function onClick(i){return _this3.handleClick(i);},onKeyDown:function onKeyDown(e,i){return _this3.handleKeyboardPress(e,i);}})]}),/*#__PURE__*/_jsxs(\"section\",{className:\"cluelists\",children:[/*#__PURE__*/_jsx(ClueList,{direction:\"across\",currentDirection:this.state.isAcross?\"across\":\"down\",squares:this.state.squares,onClick:function onClick(i,d){return _this3.handleClueRowClick(i,d);}}),/*#__PURE__*/_jsx(ClueList,{direction:\"down\",currentDirection:this.state.isAcross?\"across\":\"down\",squares:this.state.squares,onClick:function onClick(i,d){return _this3.handleClueRowClick(i,d);}})]}),/*#__PURE__*/_jsx(CongratsModal,{show:this.state.showModal,hideModal:function hideModal(){return _this3.hideModal();}})]});}}]);return Puzzle;}(React.Component);export default Puzzle;","map":{"version":3,"names":["React","Board","ClueBar","ClueList","CongratsModal","jsx","_jsx","jsxs","_jsxs","Puzzle","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","crossword","require","state","isAcross","isComplete","isStarted","squares","currSquareIndex","showModal","_createClass","key","value","handleClueRowClick","squareIndex","direction","updatedSquares","slice","index","length","square","isSelected","isRelated","includes","startTimer","setState","handleClick","updatedIsAcross","handleKeyboardPress","e","_this2","keyCode","relatedSquares","String","fromCharCode","isPencil","nextSquareIndex","indexOf","every","guess","answer","stopTimer","hideModal","render","_this3","className","children","puzzleIndex","hint","onClick","i","onKeyDown","currentDirection","d","show","Component"],"sources":["/Users/charliehwang/Desktop/chanwooh.github.io/2020/src/components/Puzzle/Puzzle.js"],"sourcesContent":["import React from 'react';\nimport './Puzzle.css';\n\nimport Board from './../Board/Board';\nimport ClueBar from './../ClueBar/ClueBar';\nimport ClueList from './../ClueList/ClueList';\nimport CongratsModal from './../CongratsModal/CongratsModal';\n\nclass Puzzle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    var crossword = require('./../../data/khai_crossword.json');\n    this.state = {\n      isAcross: false, \n      isComplete: false,\n      isStarted: false,\n      squares: crossword[\"squares\"],\n      currSquareIndex: 0,\n      showModal: false\n    };\n  }\n\n  handleClueRowClick(squareIndex, direction) {\n\n    // Copy for immutability\n    var updatedSquares = this.state.squares.slice();\n    var isAcross = direction == \"across\";\n\n    // Go through squares and update all of their props accordingly\n    for (var index = 0; index < updatedSquares.length; index++) {\n      var square = updatedSquares[index];\n      square.isSelected = index == squareIndex;\n      square.isRelated = this.state.squares[squareIndex][isAcross ? \"across\" : \"down\"][\"relatedSquares\"].includes(index);\n    }\n\n    if (!this.state.isStarted)\n    {\n      this.props.startTimer();\n    }\n\n    this.setState({\n      isAcross: isAcross,\n      isStarted: true,\n      currSquareIndex: squareIndex,\n      squares: updatedSquares\n    });\n  }\n\n  handleClick(squareIndex) {\n\n    var updatedIsAcross = this.state.currSquareIndex == squareIndex ? !this.state.isAcross : this.state.isAcross;\n    if (this.state.squares[squareIndex][updatedIsAcross ? \"across\" : \"down\"][\"puzzleIndex\"] == null) {\n      updatedIsAcross = !updatedIsAcross;\n    } \n    this.handleClueRowClick(squareIndex, updatedIsAcross ? \"across\" : \"direction\");\n  }\n\n  handleKeyboardPress(e, squareIndex) {\n\n    var keyCode = e.keyCode;\n    if (this.state.isComplete){\n\n      return;\n\n    } else if (65 <= keyCode && keyCode <= 90) {\n      /* Typed an alpha letter */\n\n      // Copy for immutability\n      var updatedSquares = this.state.squares.slice();\n      var currSquareIndex = this.state.currSquareIndex;\n      var direction = this.state.isAcross ? \"across\" : \"down\";\n      var relatedSquares = this.state.squares[currSquareIndex][direction][\"relatedSquares\"];\n\n      // Update current square's guess\n      updatedSquares[currSquareIndex][\"guess\"] = String.fromCharCode(keyCode);\n      if (this.props.isPencil) {\n        updatedSquares[currSquareIndex][\"isPencil\"] = true;\n      } else {\n        updatedSquares[currSquareIndex][\"isPencil\"] = false;\n      }\n\n      // Auto change to next square\n      // If the current square is the last element of its related squares, move to the \"nextSquareIndex\" instead\n      if (relatedSquares[relatedSquares.length - 1] == currSquareIndex) {\n        var nextSquareIndex = updatedSquares[currSquareIndex][direction][\"nextClueSquareIndex\"];\n        this.setState({\n          currSquareIndex: nextSquareIndex == -1 ? 0 : currSquareIndex\n        }, () => this.handleClick(nextSquareIndex == -1 ? 0 : nextSquareIndex));\n      } else {\n        this.handleClick(relatedSquares[relatedSquares.indexOf(currSquareIndex) + 1]);\n      }\n\n      this.setState({\n        squares: updatedSquares\n      });\n\n    } else if (keyCode == 13 || keyCode == 9) {\n      /* Typed an \"Enter\" or \"Tab\" */\n\n      var nextSquareIndex = this.state.squares[this.state.currSquareIndex][this.state.isAcross ? \"across\" : \"down\"][\"nextClueSquareIndex\"];\n\n      this.setState({\n        currSquareIndex: nextSquareIndex == -1 ? 0 : this.state.currSquareIndex\n      }, () => this.handleClick(nextSquareIndex == -1 ? 0 : nextSquareIndex));\n\n    } else if (keyCode == 8) {\n      /* Typed a backspace */\n\n      // Copy for immutability\n      var updatedSquares = this.state.squares.slice();\n      var currSquareIndex = this.state.currSquareIndex;\n      var direction = this.state.isAcross ? \"across\" : \"down\";\n      var relatedSquares = this.state.squares[currSquareIndex][direction][\"relatedSquares\"];\n\n      // Update current square's guess if a letter is already there\n      // Else, go to previous square and erase that one\n      if (updatedSquares[currSquareIndex][\"guess\"] != \"\") {\n        updatedSquares[currSquareIndex][\"guess\"] = \"\";\n      } else {\n        // Auto change to previous square\n        // Only operates within current word\n        if (relatedSquares[0] != currSquareIndex) {\n          updatedSquares[relatedSquares[relatedSquares.indexOf(currSquareIndex) - 1]][\"guess\"] = \"\";\n          this.handleClick(relatedSquares[relatedSquares.indexOf(currSquareIndex) - 1]);\n        }\n      }\n\n      this.setState({\n        squares: updatedSquares\n      });\n    }\n\n    if (this.state.squares.every(square => (square.guess == square.answer))) {\n      /* Solved the puzzle */\n\n      // Do something special\n      this.setState({\n        isComplete: true,\n        showModal: true\n      });\n\n      // Stop timer\n      this.props.stopTimer();\n    }\n  }\n\n  hideModal() {\n    this.setState({\n      showModal: false\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"puzzle\">\n        <section className=\"cluebar-board\">\n          <ClueBar direction={this.state.isStarted ? (this.state.isAcross ? \"A\" : \"D\") : \"\"}\n                   puzzleIndex={this.state.isStarted ? this.state.squares[this.state.currSquareIndex][this.state.isAcross ? \"across\" : \"down\"][\"puzzleIndex\"] : \"\"}\n                   hint={this.state.isStarted ? this.state.squares[this.state.currSquareIndex][this.state.isAcross ? \"across\" : \"down\"][\"hint\"]: \"Click on any cell to start!\"} />\n          <Board squares={this.state.squares} onClick={(i) => this.handleClick(i)} onKeyDown={(e, i) => this.handleKeyboardPress(e, i)} />\n        </section>\n        <section className=\"cluelists\">\n          <ClueList direction=\"across\" \n                    currentDirection={this.state.isAcross ? \"across\" : \"down\"} \n                    squares={this.state.squares} \n                    onClick={(i, d) => this.handleClueRowClick(i, d)} />\n          <ClueList direction=\"down\" \n                    currentDirection={this.state.isAcross ? \"across\" : \"down\"} \n                    squares={this.state.squares} \n                    onClick={(i, d) => this.handleClueRowClick(i, d)} />\n        </section>\n        <CongratsModal show={this.state.showModal} hideModal={() => this.hideModal()}/>\n      </div>\n    );\n  }\n}\n\nexport default Puzzle;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}