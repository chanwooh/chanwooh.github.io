{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar getTimeParts_1 = __importDefault(require(\"../helpers/getTimeParts\"));\nvar now_1 = __importDefault(require(\"../helpers/now\"));\nvar TimerState_1 = __importDefault(require(\"./TimerState\"));\nvar TimerModel = /** @class */function () {\n  function TimerModel(_a) {\n    var initialTime = _a.initialTime,\n      direction = _a.direction,\n      timeToUpdate = _a.timeToUpdate,\n      lastUnit = _a.lastUnit,\n      checkpoints = _a.checkpoints,\n      onChange = _a.onChange;\n    this.internalTime = now_1.default();\n    this.initialTime = initialTime;\n    this.time = initialTime;\n    this.direction = direction;\n    this.timeToUpdate = timeToUpdate;\n    this.lastUnit = lastUnit;\n    this.checkpoints = checkpoints;\n    this.innerState = new TimerState_1.default(onChange);\n    this.onChange = onChange;\n    this.timerId = null;\n  }\n  Object.defineProperty(TimerModel.prototype, \"state\", {\n    get: function get() {\n      return this.innerState.getState();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TimerModel.prototype, \"timeParts\", {\n    get: function get() {\n      return this.getTimeParts(this.computeTime());\n    },\n    enumerable: true,\n    configurable: true\n  });\n  TimerModel.prototype.getTimeParts = function (time) {\n    return getTimeParts_1.default(time, this.lastUnit);\n  };\n  TimerModel.prototype.setTime = function (time) {\n    this.internalTime = now_1.default();\n    this.initialTime = time;\n    this.time = this.initialTime;\n    this.onChange(this.getTimeParts(this.time));\n  };\n  TimerModel.prototype.getTime = function () {\n    return this.time;\n  };\n  TimerModel.prototype.setLastUnit = function (lastUnit) {\n    if (this.innerState.isPlaying()) {\n      this.pause();\n      this.lastUnit = lastUnit;\n      this.resume(true);\n    } else {\n      this.lastUnit = lastUnit;\n    }\n  };\n  TimerModel.prototype.setTimeToUpdate = function (interval) {\n    if (this.innerState.isPlaying()) {\n      this.pause();\n      this.timeToUpdate = interval;\n      this.resume();\n    } else {\n      this.timeToUpdate = interval;\n    }\n  };\n  TimerModel.prototype.setDirection = function (direction) {\n    this.direction = direction;\n  };\n  TimerModel.prototype.setCheckpoints = function (checkpoints) {\n    this.checkpoints = checkpoints;\n  };\n  TimerModel.prototype.start = function () {\n    if (this.innerState.setPlaying()) {\n      this.setTimerInterval(true);\n    }\n  };\n  TimerModel.prototype.resume = function (callImmediately) {\n    if (callImmediately === void 0) {\n      callImmediately = false;\n    }\n    if (!this.innerState.isStopped() && this.innerState.setPlaying()) {\n      this.setTimerInterval(callImmediately);\n    }\n  };\n  TimerModel.prototype.pause = function () {\n    if (this.innerState.setPaused()) {\n      clearInterval(this.timerId);\n    }\n  };\n  TimerModel.prototype.stop = function () {\n    if (this.innerState.setStopped()) {\n      clearInterval(this.timerId);\n    }\n  };\n  TimerModel.prototype.reset = function () {\n    this.time = this.initialTime;\n    this.onChange(this.getTimeParts(this.time));\n  };\n  TimerModel.prototype.setTimerInterval = function (callImmediately) {\n    var _this = this;\n    if (callImmediately === void 0) {\n      callImmediately = false;\n    }\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n    this.internalTime = now_1.default();\n    var repeatedFunc = function repeatedFunc() {\n      var oldTime = _this.time;\n      var updatedTime = _this.computeTime();\n      _this.onChange(_this.getTimeParts(updatedTime));\n      _this.checkpoints.map(function (_a) {\n        var time = _a.time,\n          callback = _a.callback;\n        var checkForForward = time > oldTime && time <= updatedTime;\n        var checkForBackward = time < oldTime && time >= updatedTime;\n        var checkIntersection = _this.direction === 'backward' ? checkForBackward : checkForForward;\n        if (checkIntersection) {\n          callback();\n        }\n      });\n    };\n    callImmediately && this.onChange(this.getTimeParts(this.time));\n    this.timerId = window.setInterval(repeatedFunc, this.timeToUpdate);\n  };\n  TimerModel.prototype.computeTime = function () {\n    if (this.innerState.isPlaying()) {\n      var currentInternalTime = now_1.default();\n      var delta = Math.abs(currentInternalTime - this.internalTime);\n      switch (this.direction) {\n        case 'forward':\n          this.time = this.time + delta;\n          this.internalTime = currentInternalTime;\n          return this.time;\n        case 'backward':\n          {\n            this.time = this.time - delta;\n            this.internalTime = currentInternalTime;\n            if (this.time < 0) {\n              this.stop();\n              return 0;\n            }\n            return this.time;\n          }\n        default:\n          return this.time;\n      }\n    }\n    return this.time;\n  };\n  return TimerModel;\n}();\nexports.TimerModel = TimerModel;","map":{"version":3,"names":["getTimeParts_1","__importDefault","require","now_1","TimerState_1","TimerModel","_a","initialTime","direction","timeToUpdate","lastUnit","checkpoints","onChange","internalTime","default","time","innerState","timerId","Object","defineProperty","prototype","get","getState","getTimeParts","computeTime","setTime","getTime","setLastUnit","isPlaying","pause","resume","setTimeToUpdate","interval","setDirection","setCheckpoints","start","setPlaying","setTimerInterval","callImmediately","isStopped","setPaused","clearInterval","stop","setStopped","reset","_this","repeatedFunc","oldTime","updatedTime","map","callback","checkForForward","checkForBackward","checkIntersection","window","setInterval","currentInternalTime","delta","Math","abs","exports"],"sources":["/Users/charliehwang/Desktop/chanwooh.github.io/2020/node_modules/react-compound-timer/src/lib/models/TimerModel.ts"],"sourcesContent":["import getTimeParts from '../helpers/getTimeParts';\nimport now from '../helpers/now';\n\nimport TimerState from './TimerState';\nimport { TimeParts, Checkpoint, Direction, TimerValue, Unit } from '../../types';\n\nexport class TimerModel {\n  private initialTime: number;\n  private internalTime: number;\n  private time: number;\n  private direction: Direction;\n  private timeToUpdate: number;\n  private lastUnit: Unit;\n  private checkpoints: Checkpoint[];\n  private innerState: TimerState;\n  private onChange: (timeParts?: TimeParts) => void;\n  private timerId: number;\n\n  constructor({\n    initialTime,\n    direction,\n    timeToUpdate,\n    lastUnit,\n    checkpoints,\n    onChange,\n  }: {\n    initialTime: number;\n    direction: Direction;\n    timeToUpdate: number;\n    lastUnit: Unit;\n    checkpoints: Checkpoint[];\n    onChange: (timerValue?: TimerValue) => void;\n  }) {\n    this.internalTime = now();\n    this.initialTime = initialTime;\n    this.time = initialTime;\n    this.direction = direction;\n    this.timeToUpdate = timeToUpdate;\n    this.lastUnit = lastUnit;\n    this.checkpoints = checkpoints;\n    this.innerState = new TimerState(onChange);\n    this.onChange = onChange;\n\n    this.timerId = null;\n  }\n\n  get state() {\n    return this.innerState.getState();\n  }\n\n  get timeParts() {\n    return this.getTimeParts(this.computeTime());\n  }\n\n  public getTimeParts(time) {\n    return getTimeParts(time, this.lastUnit);\n  }\n\n  public setTime(time: number) {\n    this.internalTime = now();\n    this.initialTime = time;\n    this.time = this.initialTime;\n\n    this.onChange(this.getTimeParts(this.time));\n  }\n\n  public getTime() {\n    return this.time;\n  }\n\n  public setLastUnit(lastUnit: Unit) {\n    if (this.innerState.isPlaying()) {\n      this.pause();\n      this.lastUnit = lastUnit;\n      this.resume(true);\n    } else {\n      this.lastUnit = lastUnit;\n    }\n  }\n\n  public setTimeToUpdate(interval: number) {\n    if (this.innerState.isPlaying()) {\n      this.pause();\n      this.timeToUpdate = interval;\n      this.resume();\n    } else {\n      this.timeToUpdate = interval;\n    }\n  }\n\n  public setDirection(direction) {\n    this.direction = direction;\n  }\n\n  public setCheckpoints(checkpoints) {\n    this.checkpoints = checkpoints;\n  }\n\n  public start() {\n    if (this.innerState.setPlaying()) {\n      this.setTimerInterval(true);\n    }\n  }\n\n  public resume(callImmediately = false) {\n    if (!this.innerState.isStopped() && this.innerState.setPlaying()) {\n      this.setTimerInterval(callImmediately);\n    }\n  }\n\n  public pause() {\n    if (this.innerState.setPaused()) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  public stop() {\n    if (this.innerState.setStopped()) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  public reset() {\n    this.time = this.initialTime;\n\n    this.onChange(this.getTimeParts(this.time));\n  }\n\n  private setTimerInterval(callImmediately = false) {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n\n    this.internalTime = now();\n\n    const repeatedFunc = () => {\n      const oldTime = this.time;\n      const updatedTime = this.computeTime();\n\n      this.onChange(this.getTimeParts(updatedTime));\n\n      this.checkpoints.map(({ time, callback }) => {\n        const checkForForward = time > oldTime && time <= updatedTime;\n        const checkForBackward = time < oldTime && time >= updatedTime;\n        const checkIntersection = this.direction === 'backward' ?\n          checkForBackward :\n          checkForForward;\n\n        if (checkIntersection) {\n          callback();\n        }\n      });\n    };\n\n    callImmediately && this.onChange(this.getTimeParts(this.time));\n\n    this.timerId = window.setInterval(repeatedFunc, this.timeToUpdate);\n  }\n\n  private computeTime() {\n    if (this.innerState.isPlaying()) {\n      const currentInternalTime = now();\n      const delta = Math.abs(currentInternalTime - this.internalTime);\n\n      switch (this.direction) {\n        case 'forward':\n          this.time = this.time + delta;\n          this.internalTime = currentInternalTime;\n\n          return this.time;\n\n        case 'backward': {\n          this.time = this.time - delta;\n          this.internalTime = currentInternalTime;\n\n          if (this.time < 0) {\n            this.stop();\n\n            return 0;\n          }\n\n          return this.time;\n        }\n\n        default:\n          return this.time;\n      }\n    }\n\n    return this.time;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}