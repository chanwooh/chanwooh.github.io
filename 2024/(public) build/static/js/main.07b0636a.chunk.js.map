{"version":3,"sources":["components/Header/Header.js","components/ToolBar/ToolBar.js","components/Square/Square.js","components/Board/Board.js","components/ClueBar/ClueBar.js","components/ClueRow/ClueRow.js","components/ClueList/ClueList.js","components/CongratsModal/court_edited.png","components/CongratsModal/summerdrink.mp3","components/CongratsModal/CongratsModal.js","components/Puzzle/Puzzle.js","components/Layout/Layout.js","index.js"],"names":["Header","props","className","ToolBar","buttonClassName","isPencil","timerRef","React","useRef","useEffect","isComplete","current","pause","formatValue","value","ref","Minutes","Seconds","onClick","penIn","pencilIn","Square","nextProps","nextState","isSelected","this","isRelated","guess","type","puzzleIndex","across","isHead","down","placeholder","squareClassName","guessClassName","width","height","tabIndex","onKeyDown","Component","Board","squares","map","square","squareIndex","answer","e","ClueBar","direction","hint","ClueRow","cluerowRef","scrollIntoView","behavior","tabindex","ClueList","relevantSquares","filter","toUpperCase","currentDirection","CongratsModal","show","audio","Audio","summerdrink","play","class","hideModal","src","court","Puzzle","crossword","require","state","isAcross","currSquareIndex","showModal","updatedSquares","slice","index","length","includes","setState","updatedIsAcross","handleClueRowClick","keyCode","relatedSquares","String","fromCharCode","nextSquareIndex","handleClick","indexOf","every","stopTimer","i","handleKeyboardPress","d","Layout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.07b0636a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <header className=\"header\">\r\n    \t<div className=\"header-wrapper\">\r\n        <div className=\"header-details\">\r\n          <div className=\"header-title\">The Crossword</div>\r\n          <div className=\"header-date\">December 25, 2020</div>\r\n          <div className=\"header-author\">\r\n            <span>By Charlie Hwang</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"placeholder\"></div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './ToolBar.css';\r\nimport Timer from 'react-compound-timer';\r\n\r\nfunction ToolBar(props) {\r\n\tvar buttonClassName = props.isPencil ? \"active\" : \"\";\r\n\tconst timerRef = React.useRef(null);\r\n\tReact.useEffect(() => {\r\n\t    if (props.isComplete) {\r\n\t      timerRef.current.pause();\r\n\t    }\r\n\t}, [props.isComplete]);\r\n\r\n    return (\r\n      <div className=\"toolbar-wrapper\">\r\n      \t<ul className=\"toolbar-tools\">\r\n      \t\t<li className=\"toolbar-timer\">\r\n      \t\t\t<Timer formatValue={(value) => `${(value < 10 ? `0${value}` : value)}`} ref={timerRef}>\r\n      \t\t\t\t<div className=\"timer\">\r\n\t      \t\t\t\t<b><Timer.Minutes />&nbsp;:&nbsp;\r\n\t      \t\t\t\t<Timer.Seconds /></b>\r\n\t      \t\t\t</div>\r\n      \t\t\t</Timer>\r\n      \t\t</li>\r\n      \t\t<li className=\"toolbar-pencil\">\r\n      \t\t\t<button className={buttonClassName} onClick={props.isPencil ? props.penIn : props.pencilIn}>\r\n      \t\t\t\t<i className=\"material-icons\">edit</i>\r\n      \t\t\t</button>\r\n      \t\t</li>\r\n      \t</ul>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ToolBar;\r\n","import React from 'react';\r\nimport './Square.css';\r\n\r\nclass Square extends React.Component {\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return nextProps.isSelected != this.props.isSelected ||\r\n      nextProps.isRelated != this.props.isRelated ||\r\n      nextProps.guess != this.props.guess;\r\n  }\r\n\r\n  render() {\r\n    if (this.props.type === \"EMPTY\") {\r\n      var puzzleIndex = this.props.across.isHead ? this.props.across.puzzleIndex : (this.props.down.isHead ? this.props.down.puzzleIndex : \"\");\r\n      var placeholder = (<div className=\"placeholder\"></div>);\r\n\r\n      var squareClassName = \"square empty-square\";\r\n      squareClassName += this.props.isRelated ? \" related\" : \"\";\r\n      squareClassName += this.props.isSelected ? \" selected\" : \"\";\r\n\r\n      var guessClassName = this.props.isPencil ? \"guess pencil\" : \"guess\";\r\n\r\n      return(\r\n        <div className={squareClassName} width=\"33\" height=\"33\" onClick={this.props.onClick} tabIndex=\"0\" onKeyDown={this.props.onKeyDown}>\r\n          <span className=\"puzzleIndex\">\r\n            {puzzleIndex == \"\" ? placeholder : puzzleIndex}\r\n          </span>\r\n          <span className={guessClassName}>\r\n            {this.props.guess}\r\n          </span>\r\n        </div>\r\n      );\r\n    } else {\r\n      return(\r\n          <div className=\"square black-square\" width=\"33\" height=\"33\" tabIndex=\"-1\"></div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Square;\r\n","import React from 'react';\r\nimport './Board.css';\r\n\r\nimport Square from './../Square/Square';\r\n\r\nclass Board extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"board\">\r\n        {\r\n          this.props.squares.map(square => (\r\n            <Square squareIndex={square.squareIndex} \r\n                    across={square.across} \r\n                    down={square.down} \r\n                    guess={square.guess} \r\n                    answer={square.answer}\r\n                    isSelected={square.isSelected}\r\n                    isRelated={square.isRelated}\r\n                    isPencil={square.isPencil}\r\n                    type={square.type}\r\n                    onClick={() => this.props.onClick(square.squareIndex)}\r\n                    onKeyDown={(e) => this.props.onKeyDown(e, square.squareIndex)}\r\n            />\r\n          ))\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","import React from 'react';\r\nimport './ClueBar.css';\r\n\r\nclass ClueBar extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"cluebar\">\r\n      \t<span className=\"cluebar-index\"><b>{this.props.puzzleIndex + this.props.direction}</b></span>\r\n      \t<span>{this.props.hint}</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ClueBar;\r\n","import React from 'react';\r\nimport './ClueRow.css';\r\n\r\nfunction ClueRow(props) {\r\n\tvar className = props.isSelected ? \"cluerow isSelected\" : \"cluerow\";\r\n  \tconst cluerowRef = React.useRef(null);\r\n\tReact.useEffect(() => {\r\n\t    if (props.isSelected && cluerowRef.current) {\r\n\t      cluerowRef.current.scrollIntoView({behavior: \"smooth\"});\r\n\t    }\r\n\t}, [props.isSelected]);\r\n\treturn (\r\n      <li className={className} ref={cluerowRef} onClick={props.onClick} tabindex=\"0\">\r\n      \t<span className=\"index\"><b>{props.puzzleIndex}</b></span>\r\n      \t<span className=\"hint\">{props.hint}</span>\r\n      </li>\r\n    );\r\n}\r\n\r\nexport default ClueRow;\r\n","import React from 'react';\r\nimport './ClueList.css';\r\n\r\nimport ClueRow from './../ClueRow/ClueRow';\r\n\r\nfunction ClueList(props) {\r\n\r\n  \tvar relevantSquares = props.squares.filter(square => (square[props.direction][\"isHead\"]));\r\n\r\n    return (\r\n      <div className=\"cluelist\">\r\n      \t<h3>{props.direction.toUpperCase()}</h3>\r\n      \t<ol>\r\n\t      \t{\r\n\t      \t\trelevantSquares.map(square => (\r\n\t\t      \t\t<ClueRow isSelected={props.direction == props.currentDirection && square[\"isRelated\"]} \r\n                puzzleIndex={square[props.direction][\"puzzleIndex\"]} \r\n                hint={square[props.direction][\"hint\"]} \r\n                onClick={() => props.onClick(square[\"squareIndex\"], props.direction)} />\r\n\t      \t\t))\r\n\t      \t}\t\r\n      \t</ol>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ClueList;\r\n","export default __webpack_public_path__ + \"static/media/court_edited.36877368.png\";","export default __webpack_public_path__ + \"static/media/summerdrink.6bc95bbc.mp3\";","import React from 'react';\r\nimport court from './court_edited.png';\r\nimport summerdrink from './summerdrink.mp3';\r\nimport './CongratsModal.css';\r\n\r\nclass CongratsModal extends React.Component {\r\n  render() {\r\n    var className = this.props.show ? \"modal-wrapper show\" : \"modal-wrapper\";\r\n    let audio = new Audio(summerdrink);\r\n    if (this.props.show) {\r\n      audio.play();\r\n    }\r\n\r\n    return (\r\n      <div class={className}>\r\n        <div class=\"modal-body\">\r\n          <span class=\"modal-body-close\" tabindex=\"0\" onClick={this.props.hideModal}>&times;</span>\r\n          <div class=\"content\">\r\n            <h2 class=\"title\">Congratulations!</h2>\r\n            <img className=\"congrats-court\" src={court}/>\r\n            <div class=\"center\">\r\n              \"Merry Christmas! Hope you enjoyed this crossword as much as I enjoyed spending time with you this year! Love you :)\"\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CongratsModal;\r\n","import React from 'react';\r\nimport './Puzzle.css';\r\n\r\nimport Board from './../Board/Board';\r\nimport ClueBar from './../ClueBar/ClueBar';\r\nimport ClueList from './../ClueList/ClueList';\r\nimport CongratsModal from './../CongratsModal/CongratsModal';\r\n\r\nclass Puzzle extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var crossword = require('./../../data/crossword.json');\r\n    this.state = {\r\n      isAcross: true, \r\n      isComplete: false,\r\n      squares: crossword[\"squares\"],\r\n      currSquareIndex: 0,\r\n      showModal: false\r\n    };\r\n  }\r\n\r\n  handleClueRowClick(squareIndex, direction) {\r\n\r\n    // Copy for immutability\r\n    var updatedSquares = this.state.squares.slice();\r\n    var isAcross = direction == \"across\";\r\n\r\n    // Go through squares and update all of their props accordingly\r\n    for (var index = 0; index < updatedSquares.length; index++) {\r\n      var square = updatedSquares[index];\r\n      square.isSelected = index == squareIndex;\r\n      square.isRelated = this.state.squares[squareIndex][isAcross ? \"across\" : \"down\"][\"relatedSquares\"].includes(index);\r\n    }\r\n\r\n    this.setState({\r\n      isAcross: isAcross,\r\n      currSquareIndex: squareIndex,\r\n      squares: updatedSquares\r\n    });\r\n  }\r\n\r\n  handleClick(squareIndex) {\r\n\r\n    var  updatedIsAcross = this.state.currSquareIndex == squareIndex ? !this.state.isAcross : this.state.isAcross;\r\n    this.handleClueRowClick(squareIndex, updatedIsAcross ? \"across\" : \"direction\");\r\n  }\r\n\r\n  handleKeyboardPress(e, squareIndex) {\r\n\r\n    var keyCode = e.keyCode;\r\n    if (this.state.isComplete){\r\n\r\n      // Do nothing\r\n\r\n    } else if (65 <= keyCode && keyCode <= 90) {\r\n      /* Typed an alpha letter */\r\n\r\n      // Copy for immutability\r\n      var updatedSquares = this.state.squares.slice();\r\n      var currSquareIndex = this.state.currSquareIndex;\r\n      var direction = this.state.isAcross ? \"across\" : \"down\";\r\n      var relatedSquares = this.state.squares[currSquareIndex][direction][\"relatedSquares\"];\r\n\r\n      // Update current square's guess\r\n      updatedSquares[currSquareIndex][\"guess\"] = String.fromCharCode(keyCode);\r\n      if (this.props.isPencil) {\r\n        updatedSquares[currSquareIndex][\"isPencil\"] = true;\r\n      } else {\r\n        updatedSquares[currSquareIndex][\"isPencil\"] = false;\r\n      }\r\n\r\n      // Auto change to next square\r\n      // If the current square is the last element of its related squares, move to the \"nextSquareIndex\" instead\r\n      if (relatedSquares[relatedSquares.length - 1] == currSquareIndex) {\r\n        var nextSquareIndex = updatedSquares[currSquareIndex][direction][\"nextClueSquareIndex\"];\r\n        this.setState({\r\n          currSquareIndex: nextSquareIndex == -1 ? 0 : currSquareIndex\r\n        }, () => this.handleClick(nextSquareIndex == -1 ? 0 : nextSquareIndex));\r\n      } else {\r\n        this.handleClick(relatedSquares[relatedSquares.indexOf(currSquareIndex) + 1]);\r\n      }\r\n\r\n      this.setState({\r\n        squares: updatedSquares\r\n      });\r\n\r\n    } else if (keyCode == 13 || keyCode == 9) {\r\n      /* Typed an \"Enter\" or \"Tab\" */\r\n\r\n      var nextSquareIndex = this.state.squares[this.state.currSquareIndex][this.state.isAcross ? \"across\" : \"down\"][\"nextClueSquareIndex\"];\r\n\r\n      this.setState({\r\n        currSquareIndex: nextSquareIndex == -1 ? 0 : this.state.currSquareIndex\r\n      }, () => this.handleClick(nextSquareIndex == -1 ? 0 : nextSquareIndex));\r\n\r\n    } else if (keyCode == 8) {\r\n      /* Typed a backspace */\r\n\r\n      // Copy for immutability\r\n      var updatedSquares = this.state.squares.slice();\r\n      var currSquareIndex = this.state.currSquareIndex;\r\n      var direction = this.state.isAcross ? \"across\" : \"down\";\r\n      var relatedSquares = this.state.squares[currSquareIndex][direction][\"relatedSquares\"];\r\n\r\n      // Update current square's guess if a letter is already there\r\n      // Else, go to previous square and erase that one\r\n      if (updatedSquares[currSquareIndex][\"guess\"] != \"\") {\r\n        updatedSquares[currSquareIndex][\"guess\"] = \"\";\r\n      } else {\r\n        // Auto change to previous square\r\n        // Only operates within current word\r\n        if (relatedSquares[0] != currSquareIndex) {\r\n          updatedSquares[relatedSquares[relatedSquares.indexOf(currSquareIndex) - 1]][\"guess\"] = \"\";\r\n          this.handleClick(relatedSquares[relatedSquares.indexOf(currSquareIndex) - 1]);\r\n        }\r\n      }\r\n\r\n      this.setState({\r\n        squares: updatedSquares\r\n      });\r\n    }\r\n\r\n    if (this.state.squares.every(square => (square.guess == square.answer))) {\r\n      /* Solved the puzzle */\r\n\r\n      // Do something special\r\n      this.setState({\r\n        isComplete: true,\r\n        showModal: true\r\n      });\r\n\r\n      // Stop timer\r\n      this.props.stopTimer();\r\n    }\r\n  }\r\n\r\n  hideModal() {\r\n    this.setState({\r\n      showModal: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"puzzle\">\r\n        <section className=\"cluebar-board\">\r\n          <ClueBar direction={this.state.isAcross ? \"A\" : \"D\"}\r\n                   puzzleIndex={this.state.squares[this.state.currSquareIndex][this.state.isAcross ? \"across\" : \"down\"][\"puzzleIndex\"]}\r\n                   hint={this.state.squares[this.state.currSquareIndex][this.state.isAcross ? \"across\" : \"down\"][\"hint\"]} />\r\n          <Board squares={this.state.squares} onClick={(i) => this.handleClick(i)} onKeyDown={(e, i) => this.handleKeyboardPress(e, i)} />\r\n        </section>\r\n        <section className=\"cluelists\">\r\n          <ClueList direction=\"across\" \r\n                    currentDirection={this.state.isAcross ? \"across\" : \"down\"} \r\n                    squares={this.state.squares} \r\n                    onClick={(i, d) => this.handleClueRowClick(i, d)} />\r\n          <ClueList direction=\"down\" \r\n                    currentDirection={this.state.isAcross ? \"across\" : \"down\"} \r\n                    squares={this.state.squares} \r\n                    onClick={(i, d) => this.handleClueRowClick(i, d)} />\r\n        </section>\r\n        <CongratsModal show={this.state.showModal} hideModal={() => this.hideModal()}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Puzzle;\r\n","import React from 'react';\r\nimport './Layout.css';\r\n\r\nimport Header from './../Header/Header';\r\nimport ToolBar from './../ToolBar/ToolBar';\r\nimport Puzzle from './../Puzzle/Puzzle';\r\n\r\nclass Layout extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isComplete: false,\r\n            isPencil: false\r\n        };\r\n    }\r\n\r\n    stopTimer() {\r\n        this.setState({isComplete: true});\r\n    }\r\n\r\n    pencilIn() {\r\n        this.setState({isPencil: true});\r\n    }\r\n\r\n    penIn() {\r\n        this.setState({isPencil: false});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"layout\">\r\n                <Header />\r\n                <ToolBar penIn={() => {this.penIn()}} pencilIn={() => {this.pencilIn()}} isComplete={this.state.isComplete} isPencil={this.state.isPencil}/>\r\n                <Puzzle stopTimer={() => {this.stopTimer()}} isPencil={this.state.isPencil}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nimport Layout from './components/Layout/Layout.js';\r\n\r\nReactDOM.render(\r\n  <Layout />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}